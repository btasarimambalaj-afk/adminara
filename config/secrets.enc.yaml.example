# SOPS Encrypted Secrets Template
# 
# Usage:
#   1. Install SOPS: https://github.com/mozilla/sops
#   2. Create age key: age-keygen -o key.txt
#   3. Copy this file: cp secrets.enc.yaml.example secrets.enc.yaml
#   4. Edit secrets: sops secrets.enc.yaml
#   5. Encrypt: sops -e -i secrets.enc.yaml
#
# Production deployment:
#   - Store age key in CI/CD secrets (SOPS_AGE_KEY)
#   - Decrypt at runtime: sops -d secrets.enc.yaml > .env

# Critical Secrets (NEVER commit unencrypted)
production:
  # Session & Auth
  SESSION_SECRET: "CHANGE_ME_32_CHARS_MIN_PRODUCTION"
  COOKIE_SECRET: "CHANGE_ME_32_CHARS_MIN_PRODUCTION"
  JWT_SECRET: "CHANGE_ME_32_CHARS_MIN_PRODUCTION"
  
  # TURN Server
  TURN_SECRET: "CHANGE_ME_32_CHARS_MIN_PRODUCTION"
  TURN_USERNAME: "adminara_prod"
  TURN_CREDENTIAL: "STRONG_PASSWORD_HERE"
  
  # Telegram
  TELEGRAM_BOT_TOKEN: "1234567890:ABCdefGHIjklMNOpqrsTUVwxyz"
  TELEGRAM_ADMIN_CHAT_ID: "123456789"
  
  # Redis
  REDIS_URL: "redis://:password@redis.example.com:6379"
  
  # Monitoring
  SENTRY_DSN: "https://key@sentry.io/project"
  METRICS_AUTH: "Basic base64encodedcreds"
  
  # GDPR Encryption
  ENCRYPTION_KEY: "32_BYTE_AES_256_KEY_HERE_CHANGE_ME"

staging:
  SESSION_SECRET: "staging_session_secret_32_chars"
  COOKIE_SECRET: "staging_cookie_secret_32_chars"
  JWT_SECRET: "staging_jwt_secret_32_chars"
  TURN_SECRET: "staging_turn_secret_32_chars"
  TELEGRAM_BOT_TOKEN: "staging_bot_token"
  TELEGRAM_ADMIN_CHAT_ID: "staging_chat_id"
  REDIS_URL: "redis://localhost:6379"
  ENCRYPTION_KEY: "staging_encryption_key_32_bytes"

# After encryption with SOPS, this file will look like:
# production:
#   SESSION_SECRET: ENC[AES256_GCM,data:...,iv:...,tag:...,type:str]
#   ...
# sops:
#   kms: []
#   gcp_kms: []
#   azure_kv: []
#   age:
#     - recipient: age1...
#       enc: |
#         -----BEGIN AGE ENCRYPTED FILE-----
#         ...
#         -----END AGE ENCRYPTED FILE-----
